{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Xerox\\\\Desktop\\\\LambdaProjects\\\\BuildWeek\\\\Front-End\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\Xerox\\\\Desktop\\\\LambdaProjects\\\\BuildWeek\\\\Front-End\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Xerox\\\\desktop\\\\LambdaProjects\\\\BuildWeek\\\\Front-End\\\\front\\\\src\\\\components\\\\login\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nfunction Login() {\n  const _useState = useState({\n    userName: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        loginForm = _useState2[0],\n        setLoginForm = _useState2[1];\n\n  const changeHandle = e => {\n    switch (e.target.name) {\n      case 'userName':\n        if (/^[a-zA-Z0-9]*$/.test(e.target.value)) {\n          setLoginForm(_objectSpread({}, loginForm, {\n            [e.target.name]: e.target.value\n          }));\n        }\n\n        break;\n\n      case 'password':\n        setLoginForm(_objectSpread({}, loginForm, {\n          [e.target.name]: e.target.value\n        }));\n        break;\n    }\n\n    console.log(loginForm);\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    setLoginForm({\n      userName: '',\n      password: ''\n    });\n    console.log(loginForm);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"userName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Username:\", React.createElement(\"input\", {\n    id: \"userName\",\n    type: \"text\",\n    name: \"userName\",\n    placeholder: \"Enter Username\",\n    required: true,\n    onChange: changeHandle,\n    value: loginForm.userName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Password:\", React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter Password\",\n    required: true,\n    onChange: changeHandle,\n    value: loginForm.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\Xerox\\desktop\\LambdaProjects\\BuildWeek\\Front-End\\front\\src\\components\\login\\Login.js"],"names":["React","useState","Login","userName","password","loginForm","setLoginForm","changeHandle","e","target","name","test","value","console","log","submitForm","preventDefault"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,KAAT,GAAiB;AAAA,oBACqBD,QAAQ,CAAC;AACvCE,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAD7B;AAAA;AAAA,QACNC,SADM;AAAA,QACKC,YADL;;AAMb,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,YAAOA,CAAC,CAACC,MAAF,CAASC,IAAhB;AACI,WAAK,UAAL;AACI,YAAG,iBAAiBC,IAAjB,CAAsBH,CAAC,CAACC,MAAF,CAASG,KAA/B,CAAH,EAA0C;AACtCN,UAAAA,YAAY,mBACLD,SADK;AAER,aAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASG;AAFlB,aAAZ;AAIH;;AACD;;AACJ,WAAK,UAAL;AACKN,QAAAA,YAAY,mBACLD,SADK;AAER,WAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASG;AAFlB,WAAZ;AAIA;AAdT;;AAgBAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH,GAlBD;;AAmBA,QAAMU,UAAU,GAAGP,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACQ,cAAF;AACAV,IAAAA,YAAY,CAAC;AACTH,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAD,CAAZ;AAIAS,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH,GAPD;;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEU,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,gBAJhB;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,QAAQ,EAAER,YANd;AAOI,IAAA,KAAK,EAAEF,SAAS,CAACF,QAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAaI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,gBAJhB;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,QAAQ,EAAEI,YANd;AAOI,IAAA,KAAK,EAAEF,SAAS,CAACD,QAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAbJ,EAyBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAzBJ,CADJ,CADJ;AA+BH;;AAED,eAAeF,KAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction Login() {\r\n    const [loginForm, setLoginForm] = useState({\r\n        userName: '', \r\n        password: ''\r\n    })\r\n\r\n    const changeHandle = e => {\r\n        switch(e.target.name){\r\n            case 'userName': \r\n                if(/^[a-zA-Z0-9]*$/.test(e.target.value)) {\r\n                    setLoginForm({\r\n                        ...loginForm, \r\n                        [e.target.name]: e.target.value\r\n                    });\r\n                }\r\n                break;\r\n            case 'password': \r\n                 setLoginForm({\r\n                     ...loginForm, \r\n                     [e.target.name]: e.target.value\r\n                 });\r\n                 break;\r\n        }\r\n        console.log(loginForm)\r\n    }\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        setLoginForm({\r\n            userName: '',\r\n            password: ''\r\n        })\r\n        console.log(loginForm)\r\n    }\r\n    return(\r\n        <div>\r\n            <form onSubmit={submitForm}>\r\n                <label htmlFor='userName'>\r\n                    Username:\r\n                    <input \r\n                        id='userName'\r\n                        type='text' \r\n                        name='userName'\r\n                        placeholder='Enter Username'\r\n                        required\r\n                        onChange={changeHandle}\r\n                        value={loginForm.userName}\r\n                    />\r\n                </label>\r\n                <label htmlFor='password'>\r\n                    Password:\r\n                    <input \r\n                        id='password'\r\n                        type='password' \r\n                        name='password' \r\n                        placeholder='Enter Password'\r\n                        required\r\n                        onChange={changeHandle}\r\n                        value={loginForm.password}\r\n                    /> \r\n                </label>\r\n                <button type='submit'>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}